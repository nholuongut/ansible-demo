# Kernel sysctl configuration file for Linux
# This file should be saved as /etc/sysctl.conf and can be activated using the command:
# sysctl -e -p /etc/sysctl.conf
# For binary values, 0 is disabled, 1 is enabled. See sysctl(8) and sysctl.conf(5) for more details.

#Document preferences URL
#https://gist.github.com/Scumtron/0865e3865fa9dd3d09c763f0332b25e8

#
# Tested with: Ubuntu 14.04 LTS kernel version 3.13
# Debian 7 kernel version 3.2
# CentOS 7 kernel version 3.1

#
# Intended use for dedicated server systems at high-speed networks with loads of RAM and bandwidth available
# Optimised and tuned for high-performance web/ftp/mail/dns servers with high connection-rates

###
### GENERAL SYSTEM SECURITY OPTIONS ###
###

#Allow for more PIDs
kernel.pid_max = 65536

# Controls the maximum size of a message, in bytes
kernel.msgmnb = 65536

# Controls the default maxmimum size of a mesage queue
kernel.msgmax = 65536

# Restrict core dumps
fs.suid_dumpable = 0


###
### IMPROVE SYSTEM MEMORY MANAGEMENT ###
###

# Increase size of file handles and inode cache
fs.file-max = 2097152

# No overcommitment of available memory
vm.overcommit_ratio = 0
vm.overcommit_memory = 0

# Keep at least 64MB of free RAM space available
vm.min_free_kbytes = 65536

###
### GENERAL NETWORK SECURITY OPTIONS ###
###

# Packet forwarding (https://linuxconfig.org/how-to-turn-on-off-ip-forwarding-in-linux)
net.ipv4.ip_forward = 1

# Configure local port range (only if server had a lot outbound connections)
net.ipv4.ip_local_port_range = 16384 65535

net.bridge.bridge-nf-call-iptables = 1
net.bridge.bridge-nf-call-arptables = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
net.ipv6.conf.lo.disable_ipv6 = 1

# Decrease the time default value for connections to keep alive
net.ipv4.tcp_keepalive_time = 300
net.ipv4.tcp_keepalive_probes = 5
net.ipv4.tcp_keepalive_intvl = 15

## Increase socket buffer ##
# Increase Read Memory Buffer #
# TCP Read Memory: Min - Default - Max #
net.ipv4.tcp_rmem = 8192 87380 16777216
net.ipv4.udp_rmem_min = 16384
# Default read memory buffer of all receiving sockets (except TCP and UDP)
net.core.rmem_default = 262144
net.core.rmem_max = 16777216
net.core.optmem_max = 40960

# Increase Write Memory Buffer #
# TCP Write Memory: Min - Default - Max #
net.ipv4.tcp_wmem = 8192 65536 16777216
net.ipv4.udp_wmem_min = 16384
# Default read memory buffer of all sending sockets (except TCP and UDP)
net.core.wmem_default = 262144
net.core.wmem_max = 16777216

# increate queue (Increase number of incoming connections backlog)
net.core.netdev_max_backlog=25000


#Prevent SYN attack, enable SYNcookies (they will kick-in when the max_syn_backlog reached)
net.ipv4.tcp_max_syn_backlog = 4096

# Increase number of incoming connections
net.core.somaxconn = 65000

# Turn on the tcp_window_scaling
net.ipv4.tcp_window_scaling = 1

# Limit number of orphans, each orphan can eat up to 16M (max wmem) of unswappable memory
net.ipv4.tcp_max_orphans = 65536

